%YAML 1.2
---
name: TAGML
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - tagml
scope: source.tagml

contexts:
  main:
    - include: escaped

    - match: "\\[!ns [^]]+]"
      scope: namespace.tagml

    - match: "\\[!--.*--]"
      scope: comments.tagml

    - match: "\\|>"
      scope: set.open.tagml
      push: set

    - match: "\\["
      scope: markup.open.start.tagml
      push: markup.open

    - match: "<"
      scope: markup.close.start.tagml
      push: markup.close


  markup.open:
    - match: "[a-zA-Z0-9_]+"
      scope: name.tagml

    - match: "\\|"
      scope: name.layer.divider.tagml
      push: layer

    - match: "[\\+-,\\?:\"']+"
      scope: name.meta.tagml

    - match: " "
      push: annotation.tagml

    - match: ">"
      scope: markup.open.end.tagml
      pop: true

    - match: "]"
      scope: markup.close.end.tagml
      pop: true

    - match: "\\[>"
      scope: annotation.richttext.tagml

    - match: "<]"
      scope: annotation.richttext.tagml



  markup.close:
    - match: "[a-zA-Z0-9_]+"
      scope: name.tagml

    - match: "\\|"
      scope: name.layer.divider.tagml
      push: layer

    - match: "[\\|\\+-,\\?:\"']+"
      scope: name.meta.tagml

    - match: "]"
      scope: markup.close.end.tagml
      pop: true


  set:
    - match: "\\["
      scope: markup.open.start.tagml
      push: markup.open

    - match: "\\|"
      scope: set.divider.tagml

    - match: "<\\|"
      scope: set.close.tagml
      pop: true

    - match: "<"
      scope: markup.close.start.tagml
      push: markup.close


  layer:
    - match: "[\\+,a-zA-Z0-9]+"
      scope: layer.name.tagml
      pop: true


  annotation.tagml:
    # - clear_scopes: 1
    - match: "([a-zA-Z0-9_]+)(=)([0-9]+\\.?[0-9]*)"
      captures:
        1: annotation.name.tagml
        2: constant.equals.tagml
        3: constant.number.tagml
      pop: true

    - match: "([a-zA-Z0-9_]+)(=)(\")([^\"]*)(\")"
      captures:
        1: annotation.name.tagml
        2: constant.equals.tagml
        3: annotation.brackets.tagml
        4: constant.string.tagml
        5: annotation.brackets.tagml
      pop: true

    - match: "([a-zA-Z0-9_]+)(=)(')([^']*)(')"
      captures:
        1: annotation.name.tagml
        2: constant.equals.tagml
        3: annotation.brackets.tagml
        4: constant.string.tagml
        5: annotation.brackets.tagml
      pop: true

    - match: "([a-zA-Z0-9_]+)(=)([Tt][Rr][Uu][Ee])"
      captures:
        1: annotation.name.tagml
        2: constant.equals.tagml
        3: constant.boolean.tagml
      pop: true

    - match: "([a-zA-Z0-9_]+)(=)([Ff][Aa][Ll][Ss][Ee])"
      captures:
        1: annotation.name.tagml
        2: constant.equals.tagml
        3: constant.boolean.tagml
      pop: true

    - match: "([a-zA-Z0-9_]+)(=)({)(.*)(})"
      captures:
        1: annotation.name.tagml
        2: constant.equals.tagml
        3: annotation.brackets.tagml
        4: constant.object.tagml
        5: annotation.brackets.tagml
      pop: true

    - match: "([a-zA-Z0-9_]+)(=)(\\[>)(.*)(<\\])"
      captures:
        1: annotation.name.tagml
        2: constant.equals.tagml
        3: annotation.brackets.tagml
        4: constant.richtext.tagml
        5: annotation.brackets.tagml
      pop: true

    - match: "([a-zA-Z0-9_]+)(=)(\\[)([^\\]]*)(\\])"
      captures:
        1: annotation.name.tagml
        2: constant.equals.tagml
        3: annotation.brackets.tagml
        4: constant.list.tagml
        5: annotation.brackets.tagml
      pop: true


  # annotation.value:
  #   # - clear_scopes: 1
  #   - match: '"'
  #     embed: scope:string.quoted.tagml
  #     embed_scope: string.quoted.tagml
  #     escape: '"'
  #     pop: true

  #   - match: "'"
  #     embed: scope:string.quoted.tagml
  #     embed_scope: string.quoted.tagml
  #     escape: "'"
  #     pop: true

  #   - match: "\\[>"
  #     embed: scope:annotation.richtext.tagml
  #     embed_scope: annotation.richtext.tagml
  #     escape: "<]"
  #     pop: true

  #   - match: "\\["
  #     embed: scope:list
  #     embed_scope: annotation.list.tagml
  #     escape: "]"
  #     pop: true

  #   - match: "{"
  #     embed: scope:object
  #     embed_scope: annotation.object.tagml
  #     escape: "}"
  #     pop: true

  #   - match: "[^ >]*"
  #     scope: annotation.value.tagml
  #     pop: true


  escaped:
    - match: \\.
      scope: constant.character.escape.tagml


